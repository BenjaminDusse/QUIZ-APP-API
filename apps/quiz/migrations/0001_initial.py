# Generated by Django 3.2.15 on 2022-09-20 18:40

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=False)),
                ('correct', models.BooleanField(default=False)),
                ('content', models.CharField(max_length=200)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('host_id', models.PositiveBigIntegerField()),
                ('title', models.CharField(max_length=200)),
                ('meta_title', models.CharField(max_length=100)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('summary', models.TextField(blank=True, max_length=200, verbose_name='The summary to mention the key highlights')),
                ('quiz_type', models.PositiveSmallIntegerField(default=1)),
                ('score', models.PositiveSmallIntegerField(default=0)),
                ('published', models.BooleanField(default=True)),
                ('published_at', models.DateTimeField(auto_now_add=True, verbose_name='need set when quiz published=True after need set date and time automatically for this model field ')),
                ('starts_at', models.DateTimeField(auto_now_add=True, verbose_name='when starts a quiz')),
                ('ends_at', models.DateTimeField(auto_now_add=True, verbose_name='when starts a quiz')),
                ('content', models.CharField(max_length=200)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='QuizTake',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('enrolled', 'enrolled'), ('started', 'started'), ('paused', 'paused'), ('finished', 'finished'), ('declared', 'declared')], max_length=200)),
                ('score', models.IntegerField(default=0, verbose_name='Total score obtained by the user')),
                ('starts_at', models.DateTimeField(auto_now_add=True, verbose_name='when starts a quiz')),
                ('finished_at', models.DateTimeField(auto_now_add=True, verbose_name='when starts a quiz')),
                ('content', models.CharField(max_length=200, verbose_name='The column used to store the take remarks')),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quiz_take', to='quiz.quiz')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quiz_take', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TakeAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=False)),
                ('content', models.CharField(max_length=200, verbose_name='The column used to store the answer in case of input or textarea type of questions')),
                ('answer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='take_answer', to='quiz.answer')),
                ('quiz_take', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='take_answer', to='quiz.quiztake')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='QuizMeta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=50)),
                ('content', models.TextField(max_length=300)),
                ('quiz', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='quiz.quiz')),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('question_type', models.CharField(choices=[('single', 'single'), ('multiple', 'multiple'), ('select', 'select'), ('filling', 'filling')], default='single', max_length=50)),
                ('active', models.BooleanField(default=False)),
                ('level', models.CharField(choices=[('easy', 'easy'), ('medium', 'medium'), ('hard', 'hard'), ('expert', 'expert')], default='easy', max_length=50)),
                ('score', models.IntegerField(default=0, verbose_name='only selective questions are active at a time and the total score of the active questions is equal to the quiz score before publishing the quiz')),
                ('content', models.TextField(max_length=300)),
                ('quiz', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='quiz.quiz')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='answer',
            name='question',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='quiz.question'),
        ),
        migrations.AddField(
            model_name='answer',
            name='quiz',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='quiz.quiz'),
        ),
    ]
